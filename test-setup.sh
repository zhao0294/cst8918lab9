#!/bin/bash

echo "üß™ Testing CST8918 Lab 9 Setup..."

# Test 1: Check if all required files exist
echo "üìÅ Checking project structure..."
required_files=(
    "infrastructure/main.tf"
    ".github/workflows/action-terraform-verify.yml"
    "package.json"
    "README.md"
    ".gitignore"
    ".tflint.hcl"
    "setup.sh"
)

for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file exists"
    else
        echo "‚ùå $file missing"
    fi
done

# Test 2: Check if Husky is installed
echo ""
echo "üêï Checking Husky installation..."
if [ -d ".husky" ]; then
    echo "‚úÖ Husky directory exists"
    if [ -f ".husky/pre-commit" ]; then
        echo "‚úÖ Pre-commit hook exists"
        if [ -x ".husky/pre-commit" ]; then
            echo "‚úÖ Pre-commit hook is executable"
        else
            echo "‚ùå Pre-commit hook is not executable"
        fi
    else
        echo "‚ùå Pre-commit hook missing"
    fi
else
    echo "‚ùå Husky directory missing"
fi

# Test 3: Check Terraform formatting
echo ""
echo "üîß Testing Terraform formatting..."
if command -v terraform &> /dev/null; then
    cd infrastructure
    if terraform fmt -check -recursive; then
        echo "‚úÖ Terraform formatting is correct"
    else
        echo "‚ùå Terraform formatting issues found"
    fi
    cd ..
else
    echo "‚ö†Ô∏è  Terraform not installed"
fi

# Test 4: Check Terraform validation
echo ""
echo "‚úÖ Testing Terraform validation..."
if command -v terraform &> /dev/null; then
    cd infrastructure
    if terraform init -backend=false > /dev/null 2>&1; then
        if terraform validate; then
            echo "‚úÖ Terraform validation passed"
        else
            echo "‚ùå Terraform validation failed"
        fi
    else
        echo "‚ùå Terraform init failed"
    fi
    cd ..
else
    echo "‚ö†Ô∏è  Terraform not installed"
fi

# Test 5: Check TFLint
echo ""
echo "üîç Testing TFLint..."
if command -v tflint &> /dev/null; then
    if tflint; then
        echo "‚úÖ TFLint passed"
    else
        echo "‚ùå TFLint failed"
    fi
else
    echo "‚ö†Ô∏è  TFLint not installed"
fi

# Test 6: Check GitHub Actions workflow syntax
echo ""
echo "‚ö° Checking GitHub Actions workflow..."
if [ -f ".github/workflows/action-terraform-verify.yml" ]; then
    echo "‚úÖ GitHub Actions workflow file exists"
    # Basic YAML syntax check
    if python3 -c "import yaml; yaml.safe_load(open('.github/workflows/action-terraform-verify.yml'))" 2>/dev/null; then
        echo "‚úÖ GitHub Actions workflow YAML syntax is valid"
    else
        echo "‚ùå GitHub Actions workflow YAML syntax error"
    fi
else
    echo "‚ùå GitHub Actions workflow file missing"
fi

echo ""
echo "üéØ Test Summary:"
echo "If you see mostly ‚úÖ marks, your setup is ready!"
echo "If you see ‚ùå marks, please fix those issues before proceeding."
echo ""
echo "Next steps:"
echo "1. Initialize git: git init"
echo "2. Add files: git add ."
echo "3. Commit: git commit -m 'Initial commit'"
echo "4. Create GitHub repo and push"
echo "5. Test pre-commit hook with formatting changes"
echo "6. Create PR to test GitHub Actions" 